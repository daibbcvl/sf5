# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    memcached_host: '%env(MEMCACHED_HOST)%'
    memcached_user: '%env(MEMCACHED_USER)%'
    memcached_password: '%env(MEMCACHED_PASSWORD)%'
    memcached_port: '%env(MEMCACHED_PORT)%'
    memcached_session_prefix: 'sess_'
    memcached_expire: 3600

    memcached.servers:
        - memcached://memcached:11211
    memcached.config: { distribution: 'consistent', compression: true }

    memcache_server: '%env(MEMCACHED_HOST)%'
    memcache_port: 11211
    session_prefix: sess_
    session_expire: 86400

    #mongodb_server: "mongodb://mongo:mongo@mongo:27017/?authSource=session_db"
    mongodb_host: mongo
    mongodb_port: 27017
    mongodb_database_name: session_db
    mongodb_user: mongo
    mongodb_password: mongo

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'
            - '../src/Form/Event'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

#    my.oauth_aware.user_provider.service:
#        class: HWI\Bundle\OAuthBundle\Security\Core\User\FOSUBUserProvider
#        arguments:
#            - '@fos_user.user_manager'
#        arguments: ['@fos_user.user_manager',{facebook: facebook_id}]`

    App\Security\LoginFormInMemoryAuthenticator:
        $userProvider: '@security.user.provider.concrete.backend_users'

    App\EventListener\TimestampableSubscriber:
        tags:
            - { name: doctrine.event_listener, event: prePersist, lazy: true }
            - { name: doctrine.event_listener, event: preUpdate, lazy: true }

    memcached:
        class: Memcached
        calls:
            - [ addServer, [ '%memcache_server%', '%memcache_port%' ] ]

    session.handler.memcached:
        class: Symfony\Component\HttpFoundation\Session\Storage\Handler\MemcachedSessionHandler
        arguments: [ '@memcached', { prefix: '%session_prefix%', expiretime: '%session_expire%' } ]

    Symfony\Component\HttpFoundation\Session\Storage\Handler\PdoSessionHandler:
        arguments:
            - '%env(DATABASE_URL)%'

    Symfony\Component\HttpFoundation\Session\Storage\Handler\MongoDbSessionHandler:
        arguments:
            - '@doctrine_mongodb.odm.default_connection'
            - { database: 'session_db', 'collection': 'sessions', username: mongo, password: mongo }


