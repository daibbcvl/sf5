# config/packages/knpu_oauth2_client.yaml
#knpu_oauth2_client:
#  clients:
#    # the key "facebook_main" can be anything, it
#    # will create a service: "knpu.oauth2.client.facebook_main"
#    facebook_main:
#      # this will be one of the supported types
#      type: facebook
#      client_id: '%env(FB_CLIENT_ID)%'
#      client_secret: '%env(FB_CLIENT_)%'
#      # the route that you're redirected to after
#      # see the controller example below
#      redirect_route: connect_facebook_check
#      redirect_params: {}
#      graph_api_version: v2.12
#    auth0:
#      # must be "auth0" - it activates that type!
#      type: auth0
#      # add and set these environment variables in your .env files
#      client_id: '%env(OAUTH_AUTH0_CLIENT_ID)%'
#      client_secret: '%env(OAUTH_AUTH0_CLIENT_SECRET)%'
#      # a route name you'll create
#      redirect_route: connect_auth0_check
#      redirect_params: {}
#      # Your custom/definite Auth0 domain, e.g. "login.mycompany.com". Set this if you use Auth0's Custom Domain feature. The "account" and "region" parameters will be ignored in this case.
#      # custom_domain: null
#      # Your Auth0 domain/account, e.g. "mycompany" if your domain is "mycompany.auth0.com"
#      # account: null
#      # Your Auth0 region, e.g. "eu" if your tenant is in the EU.
#      # region: null
#      # whether to check OAuth2 "state": defaults to true
#      # use_state: true
#    google:
#      # must be "google" - it activates that type!
#      type: google
#      # add and set these environment variables in your .env files
#      client_id: '%env(OAUTH_GOOGLE_CLIENT_ID)%'
#      client_secret: '%env(OAUTH_GOOGLE_CLIENT_SECRET)%'
#      # a route name you'll create
#      redirect_route: connect_google_check
#      redirect_params: {}
#      # Optional value for sending access_type parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#authenticationuriparameters
#      # access_type: null
#      # Optional value for sending hd parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#hd-param
#      # hosted_domain: null
#      # Optional value for additional fields to be requested from the user profile. If set, these values will be included with the defaults. More details: https://developers.google.com/+/web/api/rest/latest/people
#      # user_fields: {}
#      # Optional value if you don't want or need to enable Google+ API access.
#      # use_oidc_mode: false
#      # whether to check OAuth2 "state": defaults to true
#      # use_state: true

knpu_oauth2_client:
  clients:
    google:
      # must be "google" - it activates that type!
      type: google
      # add and configure client_id and client_secret in parameters.yml
      client_id: '%env(resolve:GOOGLE_CLIENT_ID)%'
      client_secret: '%env(resolve:GOOGLE_CLIENT_SECRET)%'
      # a route name you'll create
      redirect_route: connect_google_check
      redirect_params: {}
      # Optional value for sending access_type parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#authenticationuriparameters
      # access_type: ''
      # Optional value for sending hd parameter. More detail: https://developers.google.com/identity/protocols/OpenIDConnect#hd-param
      # hosted_domain: ''
      # Optional value for additional fields to be requested from the user profile. If set, these values will be included with the defaults. More details: https://developers.google.com/+/web/api/rest/latest/people
      # user_fields: {}
      # whether to check OAuth2 "state": defaults to true
      # use_state: true
    facebook_main:
      # this will be one of the supported types
      type: facebook
      client_id: '%env(FB_CLIENT_ID)%'
      client_secret: '%env(FB_CLIENT_SECRET)%'
      # the route that you're redirected to after
      # see the controller example below
      redirect_route: connect_facebook_check
      redirect_params: {}
      graph_api_version: v3.2

#    auth0:
#      # must be "auth0" - it activates that type!
#      type: auth0
#      # add and set these environment variables in your .env files
#      client_id: '%env(OAUTH_AUTH0_CLIENT_ID)%'
#      client_secret: '%env(OAUTH_AUTH0_CLIENT_SECRET)%'
#      # a route name you'll create
#      redirect_route: connect_auth0_check
#      redirect_params: {}
#      # Your custom/definite Auth0 domain, e.g. "login.mycompany.com". Set this if you use Auth0's Custom Domain feature. The "account" and "region" parameters will be ignored in this case.
#      # custom_domain: null
#      # Your Auth0 domain/account, e.g. "mycompany" if your domain is "mycompany.auth0.com"
#      # account: null
#      # Your Auth0 region, e.g. "eu" if your tenant is in the EU.
#      # region: null
#      # whether to check OAuth2 "state": defaults to true
#      # use_state: true
#

    stripe:
      # must be "stripe" - it activates that type!
      type: stripe
      # add and set these environment variables in your .env files
      client_id: '%env(OAUTH_STRIPE_CLIENT_ID)%'
      client_secret: '%env(OAUTH_STRIPE_CLIENT_SECRET)%'
      # a route name you'll create
      redirect_route: connect_stripe_check
      redirect_params: {}
      # whether to check OAuth2 "state": defaults to true
      # use_state: true

    github:
      # must be "github" - it activates that type!
      type: github
      # add and set these environment variables in your .env files
      client_id: '%env(OAUTH_GITHUB_CLIENT_ID)%'
      client_secret: '%env(OAUTH_GITHUB_CLIENT_SECRET)%'
      # a route name you'll create
      redirect_route: connect_github_check
      redirect_params: {}
      # whether to check OAuth2 "state": defaults to true
      # use_state: true

